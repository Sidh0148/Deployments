kind: Deployment
apiVersion: apps/v1
metadata:
  name: ai-service
  namespace: default
  uid: c2b99a47-6041-49ba-af20-2daa5e62013f
  resourceVersion: '28197'
  generation: 8
  creationTimestamp: '2024-12-12T20:04:18Z'
  annotations:
    deployment.kubernetes.io/revision: '4'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"ai-service","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"ai-service"}},"template":{"metadata":{"labels":{"app":"ai-service"}},"spec":{"containers":[{"env":[{"name":"USE_AZURE_OPENAI","value":"True"},{"name":"AZURE_OPENAI_API_VERSION","value":"2024-07-01-preview"},{"name":"AZURE_OPENAI_DEPLOYMENT_NAME","value":""},{"name":"AZURE_OPENAI_ENDPOINT","value":""},{"name":"AZURE_OPENAI_DALLE_ENDPOINT","value":""},{"name":"AZURE_OPENAI_DALLE_DEPLOYMENT_NAME","value":""},{"name":"OPENAI_API_KEY","valueFrom":{"secretKeyRef":{"key":"OPENAI_API_KEY","name":"openai-api-secret"}}}],"image":"ramymohamed/ai-service-l8:latest","livenessProbe":{"failureThreshold":10,"httpGet":{"path":"/health","port":5001},"initialDelaySeconds":3,"periodSeconds":10},"name":"ai-service","ports":[{"containerPort":5001}],"readinessProbe":{"failureThreshold":10,"httpGet":{"path":"/health","port":5001},"initialDelaySeconds":3,"periodSeconds":10},"resources":{"limits":{"cpu":"50m","memory":"128Mi"},"requests":{"cpu":"20m","memory":"50Mi"}},"startupProbe":{"failureThreshold":3,"httpGet":{"path":"/health","port":5001},"initialDelaySeconds":60,"periodSeconds":5}}],"nodeSelector":{"kubernetes.io/os":"linux"}}}}}
  managedFields:
    - manager: kubectl-client-side-apply
      operation: Update
      apiVersion: apps/v1
      time: '2024-12-12T20:04:18Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"ai-service"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"AZURE_OPENAI_API_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"AZURE_OPENAI_DALLE_DEPLOYMENT_NAME"}:
                      .: {}
                      f:name: {}
                    k:{"name":"AZURE_OPENAI_DALLE_ENDPOINT"}:
                      .: {}
                      f:name: {}
                    k:{"name":"AZURE_OPENAI_DEPLOYMENT_NAME"}:
                      .: {}
                      f:name: {}
                    k:{"name":"AZURE_OPENAI_ENDPOINT"}:
                      .: {}
                      f:name: {}
                    k:{"name":"OPENAI_API_KEY"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"USE_AZURE_OPENAI"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5001,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
    - manager: kubectl-set
      operation: Update
      apiVersion: apps/v1
      time: '2024-12-12T21:02:09Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"ai-service"}:
                  f:image: {}
    - manager: kubectl-rollout
      operation: Update
      apiVersion: apps/v1
      time: '2024-12-12T21:25:58Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2024-12-12T21:34:48Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:replicas: {}
          f:unavailableReplicas: {}
          f:updatedReplicas: {}
      subresource: status
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-service
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ai-service
      annotations:
        kubectl.kubernetes.io/restartedAt: '2024-12-12T21:25:58Z'
    spec:
      containers:
        - name: ai-service
          image: aakashsidhu/ai-service:latest
          ports:
            - containerPort: 5001
              protocol: TCP
          env:
            - name: USE_AZURE_OPENAI
              value: 'True'
            - name: AZURE_OPENAI_API_VERSION
              value: 2024-07-01-preview
            - name: AZURE_OPENAI_DEPLOYMENT_NAME
            - name: AZURE_OPENAI_ENDPOINT
            - name: AZURE_OPENAI_DALLE_ENDPOINT
            - name: AZURE_OPENAI_DALLE_DEPLOYMENT_NAME
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: openai-api-secret
                  key: OPENAI_API_KEY
          resources:
            limits:
              cpu: 50m
              memory: 128Mi
            requests:
              cpu: 20m
              memory: 50Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 5001
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 5001
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          startupProbe:
            httpGet:
              path: /health
              port: 5001
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 8
  replicas: 1
  updatedReplicas: 1
  unavailableReplicas: 1
  conditions:
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2024-12-12T21:32:06Z'
      lastTransitionTime: '2024-12-12T21:25:58Z'
      reason: NewReplicaSetAvailable
      message: ReplicaSet "ai-service-749dd68c86" has successfully progressed.
    - type: Available
      status: 'False'
      lastUpdateTime: '2024-12-12T21:34:48Z'
      lastTransitionTime: '2024-12-12T21:34:48Z'
      reason: MinimumReplicasUnavailable
      message: Deployment does not have minimum availability.
